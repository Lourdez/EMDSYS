pipeline {
    agent any

    tools {
        sonarQubeScanner 'SonarScanner'  // must match Jenkins config
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Lourdez/EMDSYS.git'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Pretend build step here"'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh """
                      sonar-scanner \
                        -Dsonar.projectKey=test-project \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://host.docker.internal:9000
                    """
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
