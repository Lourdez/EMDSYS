pipeline {
    agent any

    environment {
        SONAR_SCANNER = tool 'SonarQube'   // must match Jenkins Global Tool name
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Lourdez/EMDSYS.git'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Build step goes here"'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                        sh """
                          ${SONAR_SCANNER}/bin/sonar-scanner \
                            -Dsonar.projectKey=test-project \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://<sonarqube-host>:9000 \
                            -Dsonar.login=$SONAR_TOKEN
                        """
                    }
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
